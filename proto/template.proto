syntax = "proto3"; //To make sure to use the newer proto syntax that, then you will need to add the syntax as the first line in the file.

option go_package = "github.com/PatrickMatthiesen/DSYS-gRPC-template/proto";
//https://github.com/PatrickMatthiesen/DSYS-gRPC-template#implementation
package proto;

// compile command:
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative [path to file, ex. proto/template.proto]


// The template service definition.
// you can call it whatever you want
service Template
{   
    //Add RPC endpoints/methods to the service
    //one message is sent and one is recieved
    rpc Increment (Amount) returns (Ack);

    // many messages are sent and one is recieved
    rpc SayHi (stream Greeding) returns (Farewell);

    rpc AskForTime(AskForTimeMessage) returns (TimeMessage);

    rpc chat(stream ChatRequest) returns (stream ChatResponse) {};
}

//Amount is a type containing a string and int. They are intialized as the first and second parameter value.
message Amount {
    string clientName = 1;
    int64 value = 2;
}

message Ack {
    int64 newValue = 1;
}

message Greeding {
    string clientName = 1;
    string message = 2;
}

message Farewell {
    string message = 1;
}

message AskForTimeMessage {
  int64 clientId = 1;
}

message TimeMessage {
  string serverName = 1;
  string time = 2;
}

message ChatRequest {
    string message = 5;
    int64 time = 2;
}

message ChatResponse {
    string message = 4;
    int64 time = 3;
}



